.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_advanced_image_processing_auto_examples_plot_sharpen.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_advanced_image_processing_auto_examples_plot_sharpen.py:


Image sharpening
=================

This example shows how to sharpen an image in noiseless situation by
applying the filter inverse to the blur.




.. image:: /advanced/image_processing/auto_examples/images/sphx_glr_plot_sharpen_001.png
    :class: sphx-glr-single-img





.. code-block:: python


    import scipy
    from scipy import ndimage
    import matplotlib.pyplot as plt

    f = scipy.misc.face(gray=True).astype(float)
    blurred_f = ndimage.gaussian_filter(f, 3)

    filter_blurred_f = ndimage.gaussian_filter(blurred_f, 1)

    alpha = 30
    sharpened = blurred_f + alpha * (blurred_f - filter_blurred_f)

    plt.figure(figsize=(12, 4))

    plt.subplot(131)
    plt.imshow(f, cmap=plt.cm.gray)
    plt.axis('off')
    plt.subplot(132)
    plt.imshow(blurred_f, cmap=plt.cm.gray)
    plt.axis('off')
    plt.subplot(133)
    plt.imshow(sharpened, cmap=plt.cm.gray)
    plt.axis('off')

    plt.tight_layout()
    plt.show()

**Total running time of the script:** ( 0 minutes  0.307 seconds)


.. _sphx_glr_download_advanced_image_processing_auto_examples_plot_sharpen.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_sharpen.py <plot_sharpen.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_sharpen.ipynb <plot_sharpen.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
